---
---

@string{aps = {American Physical Society,}}

@article{10.1145/3588195.3592985,
  abbr={HPDC},
  author = {Dong, Wenqian and Kestor, Gokcen and Li, Dong},
  title = {Auto-HPCnet: An Automatic Framework to Build Neural Network-based Surrogate for High-Performance Computing Applications},
  year = {2023},
  isbn = {9798400701559},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3588195.3592985},
  doi = {10.1145/3588195.3592985},
  abstract = {High-performance computing communities are increasingly adopting Neural Networks (NN) as surrogate models in their applications to generate scientific insights. Replacing an execution phase in the application with NN models can bring significant performance improvement. However, there is a lack of tools that can help domain scientists automatically apply NN-based surrogate models to HPC applications. We introduce a framework, named AutoHPC-net, to democratize the usage of NN-based surrogates. AutoHPC-net is the first end-to-end framework that makes past proposals for the NN-based surrogate model practical and disciplined. AutoHPC-net introduces a workflow to address unique challenges when applying the approximation, such as feature acquisition and meeting the application-specific constraint on the quality of final computation outcome. We show that AutoHPC-net can leverage NN for a set of HPC applications and achieve 5.50\texttimes{} speedup on average (up to 16.8\texttimes{} speedup and with data preparation cost included) while meeting the application-specific constraint on the final computation quality.},
  booktitle = {Proceedings of the 32nd International Symposium on High-Performance Parallel and Distributed Computing},
  pages = {31–44},
  numpages = {14},
  keywords = {bayesian optimization, neural architecture search, scientific machine learning, surrogate model construction},
  location = {Orlando, FL, USA},
  series = {HPDC '23}
}

@article{10.1145/3575693.3575725,
  abbr={ASPLOS},
  author = {Yang, Shuangyan and Zhang, Minjia and Dong, Wenqian and Li, Dong},
  title = {Betty: Enabling Large-Scale GNN Training with Batch-Level Graph Partitioning},
  year = {2023},
  isbn = {9781450399166},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3575693.3575725},
  html={https://asplos-conference.org/asplos2023/index.html},
  doi = {10.1145/3575693.3575725},
  abstract = {The Graph Neural Network (GNN) is showing outstanding results in improving the performance of graph-based applications. Recent studies demonstrate that GNN performance can be boosted via using more advanced aggregators, deeper aggregation depth, larger sampling rate, etc. While leading to promising results, the improvements come at a cost of significantly increased memory footprint, easily exceeding GPU memory capacity.  
  In this paper, we introduce a method, Betty, to make GNN training more scalable and accessible via batch-level partitioning. Different from DNN training, a mini-batch in GNN has complex dependencies between input features and output labels, making batch-level partitioning difficult. Betty introduces two noveltechniques, redundancy-embedded graph (REG) partitioning and memory-aware partitioning, to effectively mitigate the redundancy and load imbalances issues across the partitions. Our evaluation of large-scale real-world datasets shows that Betty can significantly mitigate the memory bottleneck, enabling scalable GNN training with much deeper aggregation depths, larger sampling rate, larger training batch sizes, together with more advanced aggregators, with a few as a single GPU.},
  booktitle = {Proceedings of the 28th ACM International Conference on Architectural Support for Programming Languages and Operating Systems, Volume 2},
  pages = {103–117},
  numpages = {15},
  keywords = {Redundancy elimination, Load balancing, Heterogeneous memory, Graph partition, Graph neural network, Efficient training method},
  location = {Vancouver, BC, Canada},
  series = {ASPLOS 2023}
}


